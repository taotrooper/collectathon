{"version":3,"sources":["webpack:///src/app/edit-book/edit-book.page.html","webpack:///src/app/edit-book/edit-book-routing.module.ts","webpack:///src/app/edit-book/edit-book.module.ts","webpack:///src/app/edit-book/edit-book.page.scss","webpack:///src/app/edit-book/edit-book.page.ts"],"names":["routes","path","component","EditBookPageRoutingModule","imports","forChild","exports","EditBookPageModule","declarations","EditBookPage","http","navCtrl","modalController","route","router","formBuilder","TipoLista","book","isSubmitted","id","snapshot","params","Year","EAN13","ISBN","NroPaginas","Editorial","Edicion","Idioma","Tipo","getBook","console","log","getEdition","subscribe","res","item","group","EditionID","error","valid","value","updateEdition","navigateForward","controls","selector","template"],"mappings":"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","file":"edit-book-edit-book-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/edition/book/{{id}}\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Editar edición libro</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding [fullscreen]=\\\"true\\\">\\n  <form [formGroup]=\\\"book\\\" (ngSubmit)=\\\"submitForm()\\\" novalidate>\\n    <ion-list>\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"stacked\\\">Año de edición</ion-label>\\n        <ion-input placeholder=\\\"Ejemplo: 2020\\\" [value]=\\\"book.Year\\\" formControlName=\\\"Year\\\" type=\\\"text\\\">\\n        </ion-input>\\n      </ion-item>\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"stacked\\\">EAN13</ion-label>\\n        <ion-input placeholder=\\\"Ejemplo: 8491234567890\\\" [value]=\\\"book.EAN13\\\" formControlName=\\\"EAN13\\\" type=\\\"text\\\">\\n        </ion-input>\\n      </ion-item>\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"stacked\\\">ISBN</ion-label>\\n        <ion-input placeholder=\\\"Ejemplo: 9781234567890\\\" [value]=\\\"book.ISBN\\\" formControlName=\\\"ISBN\\\" type=\\\"text\\\">\\n        </ion-input>\\n      </ion-item>\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"stacked\\\">Número de páginas</ion-label>\\n        <ion-input placeholder=\\\"Ejemplo: 200\\\" [value]=\\\"book.NroPaginas\\\" formControlName=\\\"NroPaginas\\\" type=\\\"text\\\">\\n        </ion-input>\\n      </ion-item>\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"stacked\\\">Editorial</ion-label>\\n        <ion-input placeholder=\\\"Nombre editorial\\\" [value]=\\\"book.Editorial\\\" formControlName=\\\"Editorial\\\" type=\\\"text\\\">\\n        </ion-input>\\n      </ion-item>\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"stacked\\\">Número de edición (sin ordinal)</ion-label>\\n        <ion-input placeholder=\\\"Ejemplo: 2\\\" [value]=\\\"book.Edicion\\\" formControlName=\\\"Edicion\\\" type=\\\"text\\\">\\n        </ion-input>\\n      </ion-item>\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"stacked\\\">Idioma</ion-label>\\n        <ion-input placeholder=\\\"Ejemplo: Español\\\" [value]=\\\"book.Idioma\\\" formControlName=\\\"Idioma\\\" type=\\\"text\\\">\\n        </ion-input>\\n      </ion-item>\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"stacked\\\">Tipo de edición</ion-label>\\n        <ion-select okText=\\\"Aceptar\\\" cancelText=\\\"Cancelar\\\" interface=\\\"alert\\\" placeholder=\\\"Seleccionar\\\" \\n        formControlName=\\\"Tipo\\\" type=\\\"text\\\" value=\\\"{{book.Tipo}}\\\">\\n          <ion-select-option *ngFor=\\\"let t of TipoLista\\\" [value]=\\\"t\\\">{{t}}</ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n    </ion-list>\\n    <ion-button expand=\\\"block\\\" shape=\\\"round\\\" color=\\\"primary\\\" type=\\\"submit\\\">Enviar</ion-button>\\n  </form>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditBookPage } from './edit-book.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditBookPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditBookPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditBookPageRoutingModule } from './edit-book-routing.module';\n\nimport { EditBookPage } from './edit-book.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    EditBookPageRoutingModule\n  ],\n  declarations: [EditBookPage]\n})\nexport class EditBookPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQtYm9vay9lZGl0LWJvb2sucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { NavController, ModalController } from '@ionic/angular';\nimport { ApiRestService } from '../api-rest.service';\nimport { FormGroup, FormControl, FormBuilder, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: 'app-edit-book',\n  templateUrl: './edit-book.page.html',\n  styleUrls: ['./edit-book.page.scss'],\n})\nexport class EditBookPage implements OnInit {\n\n  id: any;\n  item: any;\n  Year: number;\n  EAN13: string;\n  ISBN: string;\n  NroPaginas: number;\n  Editorial: string;\n  Edicion: number;\n  Idioma: string;\n  Tipo: string;\n  CreatorUserID: number;\n  TipoLista = ['Bolsillo', 'Tapa dura', 'Ebook', 'Audiolibro'];\n  book = null;\n  typeName: string;\n  isSubmitted = false;\n\n  constructor(public http: ApiRestService, private navCtrl: NavController, public modalController: ModalController,\n    private route: ActivatedRoute, private router: Router, private formBuilder: FormBuilder) {\n      this.id = this.route.snapshot.params.id;\n      this.book = new FormGroup({\n        Year: new FormControl(),\n        EAN13: new FormControl(),\n        ISBN: new FormControl(),\n        NroPaginas: new FormControl(),\n        Editorial: new FormControl(),\n        Edicion: new FormControl(),\n        Idioma: new FormControl(),\n        Tipo: new FormControl()\n     });\n     this.getBook();\n     console.log(\"book\", this.book);\n  }\n\n  ngOnInit() {}\n\n  getBook() {\n    this.http.getEdition(this.id, \"book\").subscribe(\n      (res) => { \n        this.item = res['ItemID'];\n        this.book = this.formBuilder.group({\n          Year : [res['Year']],\n          EAN13 : [res['EAN13']],\n          EditionID : [res['EditionID']],\n          ISBN : [res['ISBN']],\n          NroPaginas : [res['NroPaginas']],\n          Editorial : [res['Editorial']],\n          Edicion : [res['Edicion']],\n          Idioma : [res['Idioma']],\n          Tipo : [res['Tipo']]\n      });\n        console.log(\"res: \", res);\n        console.log(\"book: \", this.book);\n      },\n      (error) =>{\n        console.error(error);\n      }\n    )\n  }\n\n  submitForm() {\n    this.isSubmitted = true;\n    if (!this.book.valid) {\n      console.log('Please provide all the required values!')\n      return false;\n    } else {\n      \n      console.log(this.book.value);\n      var res = this.http.updateEdition(this.book.value, this.id, \"book\");\n      console.log(\"Resultado: \",res);\n      this.navCtrl.navigateForward(\"/item/book/\"+this.item);\n    }\n  }\n\n  get errorControl() {\n    return this.book.controls;\n  }\n\n}\n"]}