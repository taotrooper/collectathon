{"version":3,"sources":["webpack:///src/app/edit-item/edit-item.page.html","webpack:///src/app/edit-item/edit-item-routing.module.ts","webpack:///src/app/edit-item/edit-item.module.ts","webpack:///src/app/edit-item/edit-item.page.scss","webpack:///src/app/edit-item/edit-item.page.ts"],"names":["routes","path","component","EditItemPageRoutingModule","imports","forChild","exports","EditItemPageModule","declarations","EditItemPage","http","navCtrl","modalController","route","router","formBuilder","item","NewSeries","isSubmitted","ItemID","snapshot","params","id","group","required","getSeriesList","getItem","console","log","type","typeName","subscribe","res","series","filter","o","error","getGenreList","genres","ItemType","getItemTypeURL","getItemTypeName","create","componentProps","modal","onDidDismiss","then","dataReturned","present","valid","value","updateItem","navigateForward","controls","selector","template"],"mappings":"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","file":"edit-item-edit-item-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/item/{{type}}/{{ItemID}}\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Editar item</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding [fullscreen]=\\\"true\\\">\\n  <form [formGroup]=\\\"item\\\" (ngSubmit)=\\\"submitForm()\\\" novalidate>\\n    <ion-list>\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"stacked\\\">Nombre del item</ion-label>\\n        <ion-input placeholder=\\\"Nombre\\\" [value]=\\\"item.ItemName\\\" formControlName=\\\"ItemName\\\" \\n        type=\\\"text\\\" required></ion-input>\\n        <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.ItemName.errors?.required\\\">\\n          Campo requerido.\\n        </span>\\n      </ion-item>\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"stacked\\\">Serie</ion-label>\\n        <ion-select okText=\\\"Aceptar\\\" cancelText=\\\"Cancelar\\\" interface=\\\"alert\\\" placeholder=\\\"Seleccionar\\\" \\n        formControlName=\\\"SeriesID\\\" type=\\\"text\\\" value=\\\"{{item.SeriesID}}\\\">\\n          <ion-select-option [value]=null>Ninguna</ion-select-option>\\n          <ion-select-option *ngFor=\\\"let s of series\\\" [value]=\\\"s.SeriesID\\\">\\n            {{s.SeriesName}}\\n          </ion-select-option>\\n        </ion-select>\\n        <ion-button (click)=\\\"goToNewSeries()\\\" small>Nueva serie...</ion-button>\\n      </ion-item>\\n      <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"stacked\\\">GÃ©neros (elige hasta 3)</ion-label>\\n        <ion-select okText=\\\"Aceptar\\\" cancelText=\\\"Cancelar\\\" interface=\\\"alert\\\" placeholder=\\\"Seleccionar\\\" \\n        formControlName=\\\"GenreID1\\\" type=\\\"text\\\" value=\\\"{{item.GenreID1}}\\\">\\n          <ion-select-option [value]=null>Ninguno</ion-select-option>\\n          <ion-select-option *ngFor=\\\"let g of genres\\\" [value]=\\\"g.GenreID\\\">\\n            {{g.GenreName}}\\n          </ion-select-option>\\n        </ion-select>\\n        <ion-select okText=\\\"Aceptar\\\" cancelText=\\\"Cancelar\\\" interface=\\\"alert\\\" placeholder=\\\"Seleccionar\\\" \\n        formControlName=\\\"GenreID2\\\" type=\\\"text\\\" value=\\\"{{item.GenreID2}}\\\">\\n          <ion-select-option [value]=null>Ninguno</ion-select-option>\\n          <ion-select-option *ngFor=\\\"let g of genres\\\" [value]=\\\"g.GenreID\\\">\\n            {{g.GenreName}}\\n          </ion-select-option>\\n        </ion-select>\\n        <ion-select okText=\\\"Aceptar\\\" cancelText=\\\"Cancelar\\\" interface=\\\"alert\\\" placeholder=\\\"Seleccionar\\\" \\n        formControlName=\\\"GenreID3\\\" type=\\\"text\\\" value=\\\"{{item.GenreID3}}\\\">\\n          <ion-select-option [value]=null>Ninguno</ion-select-option>\\n          <ion-select-option *ngFor=\\\"let g of genres\\\" [value]=\\\"g.GenreID\\\">\\n            {{g.GenreName}}\\n          </ion-select-option>\\n        </ion-select>\\n    </ion-item>\\n  </ion-list>\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col>\\n          <ion-button small expand=\\\"inline\\\" shape=\\\"round\\\" color=\\\"primary\\\" type=\\\"submit\\\">Enviar</ion-button>\\n        </ion-col>\\n      </ion-row>\\n      </ion-grid>\\n  </form>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditItemPage } from './edit-item.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditItemPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditItemPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditItemPageRoutingModule } from './edit-item-routing.module';\n\nimport { EditItemPage } from './edit-item.page';\nimport { CreateSeriesPageModule } from '../create-series/create-series.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    EditItemPageRoutingModule,\n    CreateSeriesPageModule\n  ],\n  declarations: [EditItemPage]\n})\nexport class EditItemPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQtaXRlbS9lZGl0LWl0ZW0ucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { NavController, ModalController } from '@ionic/angular';\nimport { ApiRestService } from '../api-rest.service';\nimport { FormGroup, FormControl, FormBuilder, Validators } from \"@angular/forms\";\n\nimport { CreateSeriesPage } from '../create-series/create-series.page';\n\n@Component({\n  selector: 'app-edit-item',\n  templateUrl: './edit-item.page.html',\n  styleUrls: ['./edit-item.page.scss'],\n})\nexport class EditItemPage implements OnInit {\n\n  type: any;\n  typeName: any;\n  series: any[];\n  genres: any[];\n  item = null;\n  ItemID: any;\n\tItemType: any;\n\tCreatorUserID: any;\n\tItemName: any;\n  SeriesID: any;\n  SeriesName: any;\n  NewSeries: any = null;\n  isSubmitted = false;\n\n  constructor(public http: ApiRestService, private navCtrl: NavController, public modalController: ModalController,\n    private route: ActivatedRoute, private router: Router, private formBuilder: FormBuilder) {\n      this.ItemID = this.route.snapshot.params.id;\n      this.item = this.formBuilder.group({\n        'ItemName' : [null, Validators.required],\n        'SeriesID' : [null],\n        'SeriesName' : [null],\n        'GenreID1'  : [null],\n        'GenreID2'  : [null],\n        'GenreID3'  : [null]\n      });\n      this.getSeriesList();\n      this.getItem();\n      console.log(\"type y typename: \",this.type,\" \",this.typeName);\n     }\n  \n  getSeriesList() {\n    this.http.getSeriesList().subscribe(\n      (res) => { \n        this.series = res['body'];\n        this.series = this.series.filter(o => o['CreatorUserID']>0);\n        console.log(\"Series:\",this.series);\n      },\n      (error) =>{\n        console.error(error);\n      }\n    )\n  }\n\n  getGenreList() {\n    console.log(\"busco gÃ©neros de \",this.type);\n    this.http.getGenreList(this.type).subscribe(\n      (res) => { \n        this.genres = res['body'];\n        console.log(\"GÃ©neros \",this.genres);\n      },\n      (error) =>{\n        console.error(error);\n      }\n    )\n  }\n\n  getItem() {\n    this.http.getItem(this.ItemID).subscribe(\n      (res) => { \n        this.item = this.formBuilder.group({\n          'ItemID': [res['ItemID']],\n          'ItemName': [res['ItemName']],\n          'SeriesID': [res['SeriesID']],\n          'GenreID1': [res['GenreID1']],\n          'GenreID2': [res['GenreID2']],\n          'GenreID3': [res['GenreID3']]\n        });\n        this.ItemType = res['ItemType'];\n        this.type = this.http.getItemTypeURL(this.ItemType);\n        this.typeName = this.http.getItemTypeName(this.type);\n        console.log(\"todo: \", this.item);\n        console.log(this.type);\n        this.getGenreList();\n      },\n      (error) =>{\n        console.error(error);\n      }\n    )\n  }\n\n  ngOnInit() {\n    \n  }\n\n  async goToNewSeries() {\n    console.log(\"PÃ¡gina modal\");\n    const modal = await this.modalController.create({\n      component: CreateSeriesPage,\n      componentProps: {\n        \"paramID\": 123\n      }\n    });\n\n    modal.onDidDismiss().then((dataReturned) => {\n      if (dataReturned != null) {\n        this.series = [];\n        this.NewSeries = dataReturned;\n        console.log(\"New Series: \",this.NewSeries);\n        this.getSeriesList();\n      }\n    });\n\n    return await modal.present();\n  }\n\n  submitForm() {\n    this.isSubmitted = true;\n    if (!this.item.valid) {\n      console.log('Please provide all the required values!')\n      return false;\n    } else {\n      console.log(this.item.value);\n      var res = this.http.updateItem(this.item.value, this.ItemID);\n      console.log(\"Resultado: \",res);\n      this.navCtrl.navigateForward(\"/item/\"+this.type+\"/\"+this.ItemID);\n    }\n  }\n\n  get errorControl() {\n    return this.item.controls;\n  }\n\n}\n"]}