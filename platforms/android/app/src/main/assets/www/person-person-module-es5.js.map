{"version":3,"sources":["webpack:///src/app/person/person.page.html","webpack:///src/app/person/person-routing.module.ts","webpack:///src/app/person/person.module.ts","webpack:///src/app/person/person.page.scss","webpack:///src/app/person/person.page.ts"],"names":["routes","path","component","PersonPageRoutingModule","imports","forChild","exports","PersonPageModule","declarations","PersonPage","http","navCtrl","alertCtrl","route","router","itemCount","id","snapshot","params","console","log","getItemsByPerson","getPerson","user","getUserID","creatoruser","items","subscribe","res","length","error","names","lastnames","type","navigateForward","getItemTypeURL","create","header","message","buttons","text","role","cssClass","handler","deletePerson","alert","present","selector","template"],"mappings":"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","file":"person-person-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"allpeople\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>{{names}} {{lastnames}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-item><h1>{{names}} {{lastnames}}</h1></ion-item>\\n  <ion-item><app-website-list [id]=\\\"id\\\" type=\\\"person\\\"></app-website-list></ion-item>\\n  <ion-list>\\n    <ion-item-sliding *ngIf=\\\"itemCount <= 0\\\">\\n      <ion-label style=\\\"margin-left: 5px;\\\" class=\\\"ion-text-wrap\\\">No existen items para esta persona.</ion-label>\\n    </ion-item-sliding>\\n    <ion-item-sliding *ngFor=\\\"let i of items\\\">\\n      <ion-item detail (click)=\\\"goToItem(i.ItemID, i.ItemType)\\\">\\n        <ion-icon top name={{http.getItemTypeIcon(i.ItemType)}}></ion-icon>\\n        <ion-label style=\\\"margin-left: 5px;\\\" class=\\\"ion-text-wrap\\\">{{ i.ItemSummary }}</ion-label>\\n      </ion-item>\\n    </ion-item-sliding>\\n  </ion-list>\\n\\n  <ion-grid>\\n    <ion-row>\\n      <ion-button *ngIf=\\\"creatoruser==user\\\" (click)=\\\"goToEditPerson()\\\">Editar persona</ion-button>\\n      <ion-button *ngIf=\\\"creatoruser==user && itemCount==0\\\" (click)=\\\"deletePerson()\\\" color=\\\"danger\\\">Eliminar persona</ion-button>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PersonPage } from './person.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PersonPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PersonPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PersonPageRoutingModule } from './person-routing.module';\n\nimport { PersonPage } from './person.page';\nimport { ComponentsModule } from '../components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    ComponentsModule,\n    PersonPageRoutingModule\n  ],\n  declarations: [PersonPage]\n})\nexport class PersonPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BlcnNvbi9wZXJzb24ucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { NavController, AlertController } from '@ionic/angular';\nimport { ApiRestService } from '../api-rest.service';\n\n@Component({\n  selector: 'app-person',\n  templateUrl: './person.page.html',\n  styleUrls: ['./person.page.scss'],\n})\nexport class PersonPage implements OnInit {\n\n  id: any;\n  names: any;\n  lastnames: any;\n  creatoruser: any;\n  user: any;\n  items : any[];\n  itemCount: number = 0;\n\n  constructor(public http: ApiRestService, private navCtrl: NavController, private alertCtrl: AlertController,\n    private route: ActivatedRoute, private router: Router) { \n    this.id = this.route.snapshot.params.id;\n    console.log(this.id);\n    this.getItemsByPerson();\n    this.getPerson();\n    this.user = this.http.getUserID();\n    console.log(\"usuarios: \", this.user, \" \", this.creatoruser);\n    console.log(this.items);\n  }\n\n  ngOnInit() {\n  }\n\n  getItemsByPerson() {\n    this.items = [];\n    this.http.getItemsByPerson(this.id).subscribe(\n      (res) => { \n        this.items = res['body'];\n        if(this.items) {\n          this.itemCount = this.items.length;\n        }\n        console.log(\"res: \",this.items);\n      },\n      (error) =>{\n        console.error(error);\n      }\n    )\n  }\n\n  getPerson() {\n    this.http.getPerson(this.id).subscribe(\n      (res) => { \n        this.names = res['Names'];\n        this.lastnames = res['LastNames'];\n        this.creatoruser = res['CreatorUserID'];\n        console.log(\"persona: \",res);\n      },\n      (error) =>{\n        console.error(error);\n      }\n    )\n  }\n\n  goToItem(id: string, type: number) {\n    this.navCtrl.navigateForward(\"/item/\"+this.http.getItemTypeURL(type)+\"/\"+id);\n  }\n\n  goToEditPerson() {\n    this.navCtrl.navigateForward(\"/edit-person/\"+this.id);\n  }\n\n  async deletePerson() {\n    const alert = await this.alertCtrl.create({\n      header: 'Confirmar',\n      message: '¿Estás seguro que deseas eliminar la persona?',\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancelar',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n          }\n        }, {\n          text: 'Aceptar',\n          handler: () => {\n            console.log('Confirm Okay');\n            this.http.deletePerson(this.id);\n\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n    /*let result = await alert.onDidDismiss();\n    console.log(result);*/\n    this.navCtrl.navigateForward(\"/allpeople\");\n  }\n\n}\n"]}