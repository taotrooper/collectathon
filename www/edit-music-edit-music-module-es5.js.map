{"version":3,"sources":["webpack:///src/app/edit-music/edit-music.page.html","webpack:///src/app/edit-music/edit-music-routing.module.ts","webpack:///src/app/edit-music/edit-music.module.ts","webpack:///src/app/edit-music/edit-music.page.scss","webpack:///src/app/edit-music/edit-music.page.ts"],"names":["routes","path","component","EditMusicPageRoutingModule","imports","forChild","exports","EditMusicPageModule","declarations","EditMusicPage","http","navCtrl","modalController","route","router","formBuilder","TipoLista","music","isSubmitted","id","snapshot","params","Year","EAN13","Formato","NroPistas","NroDiscos","Sello","NotasVersion","getMusic","console","log","getEdition","subscribe","res","item","group","error","valid","value","updateEdition","navigateForward","controls","selector","template"],"mappings":"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","file":"edit-music-edit-music-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/edition/music/{{id}}\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Editar edición álbum</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding [fullscreen]=\\\"true\\\">\\n  <form [formGroup]=\\\"music\\\" (ngSubmit)=\\\"submitForm()\\\" novalidate>\\n    <ion-list>\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"stacked\\\">Año de edición</ion-label>\\n        <ion-input placeholder=\\\"Ejemplo: 2020\\\" [value]=\\\"music.Year\\\" formControlName=\\\"Year\\\" type=\\\"text\\\">\\n        </ion-input>\\n      </ion-item>\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"stacked\\\">EAN13</ion-label>\\n        <ion-input placeholder=\\\"Ejemplo: 8491234567890\\\" [value]=\\\"music.EAN13\\\" formControlName=\\\"EAN13\\\" type=\\\"text\\\">\\n        </ion-input>\\n      </ion-item>\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"stacked\\\">Formato</ion-label>\\n        <ion-select okText=\\\"Aceptar\\\" cancelText=\\\"Cancelar\\\" interface=\\\"alert\\\" placeholder=\\\"Seleccionar\\\" \\n        formControlName=\\\"Formato\\\" type=\\\"text\\\" value=\\\"{{music.Formato}}\\\">\\n          <ion-select-option *ngFor=\\\"let t of TipoLista\\\" [value]=\\\"t\\\">{{t}}</ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"stacked\\\">Número de pistas</ion-label>\\n        <ion-input placeholder=\\\"Ejemplo: 10\\\" [value]=\\\"music.NroPistas\\\" formControlName=\\\"NroPistas\\\" type=\\\"number\\\">\\n        </ion-input>\\n      </ion-item>\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"stacked\\\">Número de discos</ion-label>\\n        <ion-input placeholder=\\\"Ejemplo: 1\\\" [value]=\\\"music.NroDiscos\\\" formControlName=\\\"NroDiscos\\\" type=\\\"number\\\">\\n        </ion-input>\\n      </ion-item>\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"stacked\\\">Sello discográfico</ion-label>\\n        <ion-input placeholder=\\\"Ejemplo: Sony Music\\\" [value]=\\\"music.Sello\\\" formControlName=\\\"Sello\\\" type=\\\"text\\\">\\n        </ion-input>\\n      </ion-item>\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"stacked\\\">la versión (remasterizado, ed. especial, etc.)</ion-label>\\n        <ion-input placeholder=\\\"Ejemplo: Versión europea remasterizada\\\" [value]=\\\"music.NotasVersion\\\" \\n        formControlName=\\\"NotasVersion\\\" type=\\\"text\\\">\\n        </ion-input>\\n      </ion-item>\\n    </ion-list>\\n    <ion-button expand=\\\"block\\\" shape=\\\"round\\\" color=\\\"primary\\\" type=\\\"submit\\\">Enviar</ion-button>\\n  </form>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditMusicPage } from './edit-music.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditMusicPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditMusicPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditMusicPageRoutingModule } from './edit-music-routing.module';\n\nimport { EditMusicPage } from './edit-music.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    EditMusicPageRoutingModule\n  ],\n  declarations: [EditMusicPage]\n})\nexport class EditMusicPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQtbXVzaWMvZWRpdC1tdXNpYy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { NavController, ModalController } from '@ionic/angular';\nimport { ApiRestService } from '../api-rest.service';\nimport { FormGroup, FormControl, FormBuilder, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: 'app-edit-music',\n  templateUrl: './edit-music.page.html',\n  styleUrls: ['./edit-music.page.scss'],\n})\nexport class EditMusicPage implements OnInit {\n\n  id: any;\n  item: any;\n  Year: number;\n  EAN13: string;\n  Formato: string;\n  NroPistas: number;\n  NroDiscos: number;\n  Sello: string;\n  NotasVersion: string;\n  CreatorUserID: number;\n  TipoLista = ['Vinilo', 'Cassette', 'CD', 'Digital'];\n  music = null;\n  typeName: string;\n  isSubmitted = false;\n\n  constructor(public http: ApiRestService, private navCtrl: NavController, public modalController: ModalController,\n    private route: ActivatedRoute, private router: Router, private formBuilder: FormBuilder) {\n      this.id = this.route.snapshot.params.id;\n      this.music = new FormGroup({\n        Year: new FormControl(),\n        EAN13: new FormControl(),\n        Formato: new FormControl(),\n        NroPistas: new FormControl(),\n        NroDiscos: new FormControl(),\n        Sello: new FormControl(),\n        NotasVersion: new FormControl()\n     });\n     this.getMusic();\n     console.log(\"music\", this.music);\n  }\n\n  ngOnInit() {}\n\n  getMusic() {\n    this.http.getEdition(this.id, \"music\").subscribe(\n      (res) => { \n        this.item = res['ItemID'];\n        this.music = this.formBuilder.group({\n          'Year' : [res['Year']],\n          'EAN13' : [res['EAN13']],\n          'EditionID' : [res['EditionID']],\n          'Formato' : [res['Formato']],\n          'NroPistas' : [res['NroPistas']],\n          'NroDiscos' : [res['NroDiscos']],\n          'Sello' : [res['Sello']],\n          'NotasVersion' : [res['NotasVersion']]\n        });\n        console.log(\"res: \", res);\n        console.log(\"music: \", this.music);\n      },\n      (error) =>{\n        console.error(error);\n      }\n    )\n  }\n\n  submitForm() {\n    this.isSubmitted = true;\n    if (!this.music.valid) {\n      console.log('Please provide all the required values!')\n      return false;\n    } else {\n      \n      console.log(this.music.value);\n      var res = this.http.updateEdition(this.music.value, this.id, \"music\");\n      console.log(\"Resultado: \",res);\n      this.navCtrl.navigateForward(\"/item/music/\"+this.item);\n    }\n  }\n\n  get errorControl() {\n    return this.music.controls;\n  }\n\n}\n"]}