{"version":3,"sources":["./src/app/allgenres/allgenres.page.html","./src/app/allgenres/allgenres-routing.module.ts","./src/app/allgenres/allgenres.module.ts","./src/app/allgenres/allgenres.page.scss","./src/app/allgenres/allgenres.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,gpBAAilB,cAAc,qrCAAqrC,aAAa,IAAI,aAAa,6GAA6G,E;;;;;;;;;;;;;;;;;;;ACAr4D;AACc;AAEN;AAEjD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6DAAa;KACzB;CACF,CAAC;IAMW,0BAA0B,SAA1B,0BAA0B;CAAG;AAA7B,0BAA0B;IAJtC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,0BAA0B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBE;AACM;AACmB;AAErB;AAE2B;AAEvB;IAYpC,mBAAmB,SAAnB,mBAAmB;CAAG;AAAtB,mBAAmB;IAV/B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,kEAAmB;YACnB,0DAAW;YACX,oFAA0B;SAC3B;QACD,YAAY,EAAE,CAAC,6DAAa,CAAC;KAC9B,CAAC;GACW,mBAAmB,CAAG;AAAH;;;;;;;;;;;;;ACpBhC;AAAe,6GAA8C,+IAA+I,E;;;;;;;;;;;;;;;;;;;;;ACA1J;AACyB;AAC5B;AACsB;AAChB;IAOxC,aAAa,SAAb,aAAa;IAOxB,YAAmB,IAAoB,EAAU,OAAsB,EAC7D,KAAqB,EAAU,MAAc,EAAU,WAAwB;QADtE,SAAI,GAAJ,IAAI,CAAgB;QAAU,YAAO,GAAP,OAAO,CAAe;QAC7D,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QAJzF,iBAAY,GAAY,IAAI,CAAC;QAC7B,iBAAY,GAAG,kBAAkB,CAAC;QAI9B,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,IAAI,wDAAS,CAAC;YAC5B,SAAS,EAAE,IAAI,0DAAW,EAAE;YAC5B,OAAO,EAAE,IAAI,0DAAW,EAAE;YAC1B,KAAK,EAAE,IAAI,0DAAW,EAAE;YACxB,MAAM,EAAE,IAAI,0DAAW,EAAE;SAC1B,CAAC,CAAC;IACL,CAAC;IAEH,SAAS;QACP,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,SAAS,CACnC,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;QAC5B,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC,CACF;IACH,CAAC;IAED,SAAS,CAAC,EAAU;QAClB,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,SAAS,GAAC,EAAE,CAAC,CAAC;IAC7C,CAAC;IAED,WAAW;QACT,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;QACvC,IAAG,IAAI,CAAC,YAAY,EAAE;YACpB,IAAI,CAAC,YAAY,GAAG,kBAAkB,CAAC;SACxC;aAAM;YACL,IAAI,CAAC,YAAY,GAAG,oBAAoB,CAAC;SAC1C;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,WAAW,EAAG,CAAC,IAAI,CAAC;YACpB,SAAS,EAAG,CAAC,IAAI,CAAC;YAClB,OAAO,EAAG,CAAC,IAAI,CAAC;YAChB,QAAQ,EAAG,CAAC,IAAI,CAAC;SACpB,CAAC,CAAC;IACH,CAAC;CAEF;;YA3DQ,gEAAc;YAFd,4DAAa;YADL,8DAAc;YAAtB,sDAAM;YAEkB,0DAAW;;AAQ/B,aAAa;IALzB,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,6NAAoC;;KAErC,CAAC;GACW,aAAa,CAoDzB;AApDyB","file":"allgenres-allgenres-module-es2015.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"explore\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Géneros</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-list>\\n    <form [formGroup]=\\\"selector\\\" novalidate>\\n      <ion-item-sliding>\\n        <ion-item (click)=\\\"clickFilter()\\\">\\n          <ion-label>Categorías</ion-label><ion-icon name=\\\"{{iconSelector}}\\\"></ion-icon>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\" *ngIf=\\\"showSelector\\\">\\n          <ion-toggle color=\\\"secondary\\\" formControlName=\\\"narrativa\\\"></ion-toggle>\\n          <ion-label style=\\\"margin-left: 5px\\\">Narrativa</ion-label>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\" *ngIf=\\\"showSelector\\\">\\n          <ion-toggle color=\\\"secondary\\\" formControlName=\\\"musical\\\"></ion-toggle>\\n          <ion-label style=\\\"margin-left: 5px\\\">Musical</ion-label>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\" *ngIf=\\\"showSelector\\\">\\n          <ion-toggle color=\\\"secondary\\\" formControlName=\\\"manga\\\"></ion-toggle>\\n          <ion-label style=\\\"margin-left: 5px\\\">Manga</ion-label>\\n        </ion-item>\\n        <ion-item *ngIf=\\\"showSelector\\\">\\n          <ion-toggle color=\\\"secondary\\\" formControlName=\\\"gaming\\\"></ion-toggle>\\n          <ion-label style=\\\"margin-left: 5px\\\">Gaming</ion-label>\\n        </ion-item>\\n      </ion-item-sliding>\\n      <ion-item-sliding *ngFor=\\\"let g of genres\\\">\\n      <ion-item detail (click)=\\\"goToGenre(g.GenreID)\\\" *ngIf=\\\"selector.value[g.GenreType]\\\">\\n        <ion-icon top name=\\\"bookmark-outline\\\"></ion-icon>\\n        <span>{{g.GenreName}} ({{g.GenreType}})</span>\\n      </ion-item>\\n    </ion-item-sliding>\\n    </form>\\n  </ion-list>\\n  <br />\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AllgenresPage } from './allgenres.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AllgenresPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AllgenresPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AllgenresPageRoutingModule } from './allgenres-routing.module';\n\nimport { AllgenresPage } from './allgenres.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    AllgenresPageRoutingModule\n  ],\n  declarations: [AllgenresPage]\n})\nexport class AllgenresPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FsbGdlbnJlcy9hbGxnZW5yZXMucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { NavController } from '@ionic/angular';\nimport { FormGroup, FormControl, FormBuilder } from \"@angular/forms\";\nimport { ApiRestService } from '../api-rest.service';\n\n@Component({\n  selector: 'app-allgenres',\n  templateUrl: './allgenres.page.html',\n  styleUrls: ['./allgenres.page.scss'],\n})\nexport class AllgenresPage implements OnInit {\n\n  genres: any[];\n  selector: FormGroup;\n  showSelector: boolean = true;\n  iconSelector = 'caret-up-outline';\n\n  constructor(public http: ApiRestService, private navCtrl: NavController,\n    private route: ActivatedRoute, private router: Router, private formBuilder: FormBuilder) {\n      this.getGenres();\n      this.selector = new FormGroup({\n        narrativa: new FormControl(),\n        musical: new FormControl(),\n        manga: new FormControl(),\n        gaming: new FormControl()\n      });\n    }\n\n  getGenres() {\n    this.genres = [];\n    this.http.getAllGenreList().subscribe(\n      (res) => { \n        this.genres = res['body'];\n      },\n      (error) =>{\n        console.error(error);\n      }\n    )\n  }\n\n  goToGenre(id: string) {\n    this.navCtrl.navigateForward(\"/genre/\"+id);\n  }\n\n  clickFilter() {\n    this.showSelector = !this.showSelector;\n    if(this.showSelector) {\n      this.iconSelector = 'caret-up-outline';\n    } else {\n      this.iconSelector = 'caret-down-outline';\n    }\n  }\n\n  ngOnInit() {\n    this.selector = this.formBuilder.group({\n      'narrativa' : [true],\n      'musical' : [true],\n      'manga' : [true],\n      'gaming' : [true]\n  });\n  }\n\n}\n"],"sourceRoot":"webpack:///"}