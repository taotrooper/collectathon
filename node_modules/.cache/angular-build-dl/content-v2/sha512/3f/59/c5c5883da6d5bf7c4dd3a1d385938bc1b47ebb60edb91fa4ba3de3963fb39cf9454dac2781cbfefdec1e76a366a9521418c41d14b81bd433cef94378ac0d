{"version":3,"sources":["webpack:///src/app/series/series.page.html","webpack:///src/app/series/series-routing.module.ts","webpack:///src/app/series/series.module.ts","webpack:///src/app/series/series.page.scss","webpack:///src/app/series/series.page.ts"],"names":["routes","path","component","SeriesPageRoutingModule","imports","forChild","exports","SeriesPageModule","declarations","SeriesPage","http","navCtrl","route","router","alertCtrl","itemCount","id","snapshot","params","console","log","getItemsInSeries","getSeries","user","getUserID","items","subscribe","res","length","error","name","creatorUser","finished","type","navigateForward","getItemTypeURL","create","header","message","buttons","text","role","cssClass","handler","deleteSeries","alert","present","selector","template"],"mappings":"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","file":"series-series-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"allseries\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>{{name}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n\\n  <ion-list>\\n    <ion-item><h1>{{name}}</h1></ion-item>\\n    <ion-item-sliding>\\n      <ion-label style=\\\"margin-left: 5px;\\\" class=\\\"ion-text-wrap\\\">\\n        <small>Esta serie está marcada como <span *ngIf=\\\"finished==0\\\">no</span> terminada.</small>\\n      </ion-label>\\n      <ion-grid>\\n        <ion-row>\\n          <ion-button *ngIf=\\\"creatorUser==user\\\" (click)=\\\"goToEditSeries()\\\">Editar serie</ion-button>\\n          <ion-button *ngIf=\\\"creatorUser==user && itemCount==0\\\" (click)=\\\"deleteSeries()\\\" color=\\\"danger\\\">Eliminar serie</ion-button>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-item-sliding>\\n    <ion-item-sliding *ngIf=\\\"itemCount <= 0\\\">\\n      <ion-label style=\\\"margin-left: 5px;\\\" class=\\\"ion-text-wrap\\\">No existen ediciones para esta serie.</ion-label>\\n    </ion-item-sliding>\\n    <ion-item-sliding *ngFor=\\\"let i of items\\\">\\n      <ion-item detail (click)=\\\"goToItem(i.ItemID, i.ItemType)\\\">\\n        <ion-icon top name={{http.getItemTypeIcon(i.ItemType)}}></ion-icon>\\n        <ion-label style=\\\"margin-left: 5px;\\\" class=\\\"ion-text-wrap\\\">{{ i.ItemSummary }}</ion-label>\\n      </ion-item>\\n    </ion-item-sliding>\\n  </ion-list>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SeriesPage } from './series.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SeriesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SeriesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SeriesPageRoutingModule } from './series-routing.module';\n\nimport { SeriesPage } from './series.page';\nimport { ComponentsModule } from '../components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SeriesPageRoutingModule,\n    ComponentsModule\n  ],\n  declarations: [SeriesPage]\n})\nexport class SeriesPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Nlcmllcy9zZXJpZXMucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { NavController, AlertController } from '@ionic/angular';\nimport { ApiRestService } from '../api-rest.service';\n\n@Component({\n  selector: 'app-series',\n  templateUrl: './series.page.html',\n  styleUrls: ['./series.page.scss'],\n})\nexport class SeriesPage implements OnInit {\n\n  id: any;\n  name: any;\n  creatorUser: any;\n  user: any;\n  finished: any;\n  items : any[];\n  itemCount: number = 0;\n\n  constructor(public http: ApiRestService, private navCtrl: NavController,\n    private route: ActivatedRoute, private router: Router, private alertCtrl: AlertController) { \n    this.id = this.route.snapshot.params.id;\n    console.log(this.id);\n    this.getItemsInSeries();\n    this.getSeries();\n    this.user = this.http.getUserID();\n    console.log(this.items);\n  }\n\n  ngOnInit() {\n  }\n\n  getItemsInSeries() {\n    this.items = [];\n    this.http.getItemsInSeries(this.id).subscribe(\n      (res) => { \n        this.items = res['body'];\n        if(this.items) {\n          this.itemCount = this.items.length;\n        }\n        console.log(\"res: \",this.items);\n      },\n      (error) =>{\n        console.error(error);\n      }\n    )\n  }\n\n  getSeries() {\n    this.http.getSeries(this.id).subscribe(\n      (res) => { \n        this.name = res['SeriesName'];\n        this.creatorUser = res['CreatorUserID'];\n        this.finished = res['Finished'];\n      },\n      (error) =>{\n        console.error(error);\n      }\n    )\n  }\n\n  goToItem(id: string, type: number) {\n    this.navCtrl.navigateForward(\"/item/\"+this.http.getItemTypeURL(type)+\"/\"+id);\n  }\n\n  goToEditSeries() {\n    this.navCtrl.navigateForward(\"/edit-series/\"+this.id);\n  }\n\n  async deleteSeries() {\n    const alert = await this.alertCtrl.create({\n      header: 'Confirmar',\n      message: '¿Estás seguro que deseas eliminar la serie?',\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancelar',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n          }\n        }, {\n          text: 'Aceptar',\n          handler: () => {\n            console.log('Confirm Okay');\n            this.http.deleteSeries(this.id);\n\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n    /*let result = await alert.onDidDismiss();\n    console.log(result);*/\n    this.navCtrl.navigateForward(\"/allseries\");\n  }\n\n}\n"]}