{"version":3,"sources":["./src/app/create-person/create-person.page.html","./src/app/create-person/create-person-routing.module.ts","./src/app/create-person/create-person.module.ts","./src/app/create-person/create-person.page.scss","./src/app/create-person/create-person.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,y1CAA0xC,E;;;;;;;;;;;;;;;;;;;ACAhwC;AACc;AAEC;AAExD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,oEAAgB;KAC5B;CACF,CAAC;IAMW,6BAA6B,SAA7B,6BAA6B;CAAG;AAAhC,6BAA6B;IAJzC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,6BAA6B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBD;AACM;AACmB;AAErB;AAEkC;AAEvB;IAY3C,sBAAsB,SAAtB,sBAAsB;CAAG;AAAzB,sBAAsB;IAVlC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,kEAAmB;YACnB,0DAAW;YACX,2FAA6B;SAC9B;QACD,YAAY,EAAE,CAAC,oEAAgB,CAAC;KACjC,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;ACpBnC;AAAe,6GAA8C,2JAA2J,E;;;;;;;;;;;;;;;;;;;;;ACAtK;AACyB;AAC5B;AACM;AAC4B;IAOpE,gBAAgB,SAAhB,gBAAgB;IAQ3B,YAAmB,IAAoB,EAAU,OAAsB,EAAU,KAAqB,EAC5F,MAAc,EAAU,WAAwB;QADvC,SAAI,GAAJ,IAAI,CAAgB;QAAU,YAAO,GAAP,OAAO,CAAe;QAAU,UAAK,GAAL,KAAK,CAAgB;QAC5F,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QAH1D,gBAAW,GAAG,KAAK,CAAC;QAIhB,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAS,CAAC;YAC7B,KAAK,EAAE,IAAI,0DAAW,EAAE;YACxB,SAAS,EAAE,IAAI,0DAAW,EAAE;YAC5B,QAAQ,EAAE,IAAI,0DAAW,EAAE;SAC7B,CAAC,CAAC;IACH,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,OAAO,EAAG,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,WAAW,EAAG,CAAC,IAAI,CAAC;SACrB,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACzB,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC;YACtD,OAAO,KAAK,CAAC;SACd;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAC7D,OAAO,CAAC,GAAG,CAAC,WAAW,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACvC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;SAC5C;IACH,CAAC;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;IACjC,CAAC;CAEF;;YAjDQ,gEAAc;YADd,4DAAa;YADL,8DAAc;YAAtB,sDAAM;YAGkB,0DAAW;;AAO/B,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,yOAAwC;;KAEzC,CAAC;GACW,gBAAgB,CAyC5B;AAzC4B","file":"create-person-create-person-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/allpeople\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Crear persona/grupo</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding [fullscreen]=\\\"true\\\">\\n  <form [formGroup]=\\\"newperson\\\" (ngSubmit)=\\\"submitForm()\\\" novalidate>\\n    <ion-list>\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"stacked\\\">Nombres/pseud√≥nimo de la persona o grupo</ion-label>\\n        <ion-input placeholder=\\\"Nombre\\\" formControlName=\\\"Names\\\" type=\\\"text\\\" required></ion-input>\\n        <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.Names.errors?.required\\\">\\n          Campo requerido.\\n        </span>\\n      </ion-item>\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"stacked\\\">Apellidos de la persona (si tiene)</ion-label>\\n        <ion-input placeholder=\\\"Apellidos\\\" formControlName=\\\"LastNames\\\" type=\\\"text\\\"></ion-input>\\n      </ion-item>\\n    </ion-list>\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col>\\n          <ion-button small expand=\\\"inline\\\" shape=\\\"round\\\" color=\\\"primary\\\" type=\\\"submit\\\">Enviar</ion-button>\\n        </ion-col>\\n      </ion-row>\\n      </ion-grid>\\n  </form>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CreatePersonPage } from './create-person.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CreatePersonPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CreatePersonPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CreatePersonPageRoutingModule } from './create-person-routing.module';\n\nimport { CreatePersonPage } from './create-person.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    CreatePersonPageRoutingModule\n  ],\n  declarations: [CreatePersonPage]\n})\nexport class CreatePersonPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NyZWF0ZS1wZXJzb24vY3JlYXRlLXBlcnNvbi5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { NavController } from '@ionic/angular';\nimport { ApiRestService } from '../api-rest.service';\nimport { FormGroup, FormControl, FormBuilder, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: 'app-create-person',\n  templateUrl: './create-person.page.html',\n  styleUrls: ['./create-person.page.scss'],\n})\nexport class CreatePersonPage implements OnInit {\n\n  Names: string;\n  LastNames: boolean;\n  PersonID: any;\n  newperson: FormGroup;\n  isSubmitted = false;\n\n  constructor(public http: ApiRestService, private navCtrl: NavController, private route: ActivatedRoute, \n    private router: Router, private formBuilder: FormBuilder) {\n      this.newperson = new FormGroup({\n        Names: new FormControl(),\n        LastNames: new FormControl(),\n        PersonID: new FormControl()\n     });\n     }\n\n  ngOnInit() {\n    this.newperson = this.formBuilder.group({\n      'Names' : [null, Validators.required],\n      'LastNames' : [null]\n    });\n  }\n\n  submitForm() {\n    this.isSubmitted = true;\n    if (!this.newperson.valid) {\n      console.log('Please provide all the required values!')\n      return false;\n    } else {\n      console.log(this.newperson.value);\n      this.PersonID = this.http.createPerson(this.newperson.value);\n      console.log(\"PersonID:\",this.PersonID);\n      this.navCtrl.navigateForward(\"/allpeople\");\n    }\n  }\n\n  get errorControl() {\n    return this.newperson.controls;\n  }\n\n}\n"],"sourceRoot":"webpack:///"}