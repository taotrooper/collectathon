{"version":3,"sources":["webpack:///src/app/create-item/create-item.page.html","webpack:///src/app/create-item/create-item-routing.module.ts","webpack:///src/app/create-item/create-item.module.ts","webpack:///src/app/create-item/create-item.page.scss","webpack:///src/app/create-item/create-item.page.ts"],"names":["routes","path","component","CreateItemPageRoutingModule","imports","forChild","exports","CreateItemPageModule","declarations","CreateItemPage","http","navCtrl","modalController","route","router","formBuilder","NewSeries","isSubmitted","type","snapshot","params","typeName","getItemTypeName","getSeriesList","getGenreList","newitem","ItemName","SeriesID","GenreID1","GenreID2","GenreID3","ItemType","getItemType","subscribe","res","series","filter","o","console","log","error","genres","group","required","create","componentProps","modal","onDidDismiss","then","dataReturned","present","valid","value","ItemID","createItem","e1","e2","id","controls","selector","template"],"mappings":"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","file":"create-item-create-item-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/home\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Crear item</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding [fullscreen]=\\\"true\\\">\\n  <form [formGroup]=\\\"newitem\\\" (ngSubmit)=\\\"submitForm()\\\" novalidate>\\n    <ion-list>\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"stacked\\\">Nombre del item</ion-label>\\n        <ion-input placeholder=\\\"Nombre\\\" formControlName=\\\"ItemName\\\" type=\\\"text\\\" required></ion-input>\\n        <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.ItemName.errors?.required\\\">\\n          Campo requerido.\\n        </span>\\n      </ion-item>\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"stacked\\\">Serie</ion-label>\\n        <ion-select #SeriesID okText=\\\"Aceptar\\\" cancelText=\\\"Cancelar\\\" interface=\\\"alert\\\" placeholder=\\\"Seleccionar\\\" \\n        formControlName=\\\"SeriesID\\\" type=\\\"text\\\">\\n          <ion-select-option [value]=null>Ninguna</ion-select-option>\\n          <ion-select-option *ngFor=\\\"let s of series\\\" [value]=\\\"s.SeriesID\\\">{{s.SeriesName}}</ion-select-option>\\n        </ion-select>\\n        <ion-button (click)=\\\"goToNewSeries()\\\" small>Nueva serie...</ion-button>\\n      </ion-item>\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"stacked\\\">GÃ©neros (elige hasta 3)</ion-label>\\n          <ion-select okText=\\\"Aceptar\\\" cancelText=\\\"Cancelar\\\" interface=\\\"alert\\\" placeholder=\\\"Seleccionar\\\" \\n          formControlName=\\\"GenreID1\\\" type=\\\"text\\\">\\n            <ion-select-option [value]=null>Ninguno</ion-select-option>\\n            <ion-select-option *ngFor=\\\"let g of genres\\\" [value]=\\\"g.GenreID\\\">\\n              {{g.GenreName}}\\n            </ion-select-option>\\n          </ion-select>\\n          <ion-select okText=\\\"Aceptar\\\" cancelText=\\\"Cancelar\\\" interface=\\\"alert\\\" placeholder=\\\"Seleccionar\\\" \\n          formControlName=\\\"GenreID2\\\">\\n            <ion-select-option [value]=null>Ninguno</ion-select-option>\\n            <ion-select-option *ngFor=\\\"let g of genres\\\" [value]=\\\"g.GenreID\\\">\\n              {{g.GenreName}}\\n            </ion-select-option>\\n          </ion-select>\\n          <ion-select okText=\\\"Aceptar\\\" cancelText=\\\"Cancelar\\\" interface=\\\"alert\\\" placeholder=\\\"Seleccionar\\\" \\n          formControlName=\\\"GenreID3\\\">\\n            <ion-select-option [value]=null>Ninguno</ion-select-option>\\n            <ion-select-option *ngFor=\\\"let g of genres\\\" [value]=\\\"g.GenreID\\\">\\n              {{g.GenreName}}\\n            </ion-select-option>\\n          </ion-select>\\n      </ion-item>\\n    </ion-list>\\n    <ion-button expand=\\\"block\\\" shape=\\\"round\\\" color=\\\"primary\\\" type=\\\"submit\\\">Siguiente ></ion-button>\\n  </form>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CreateItemPage } from './create-item.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CreateItemPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CreateItemPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CreateItemPageRoutingModule } from './create-item-routing.module';\n\nimport { CreateItemPage } from './create-item.page';\nimport { CreateSeriesPageModule } from '../create-series/create-series.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    CreateItemPageRoutingModule,\n    CreateSeriesPageModule\n  ],\n  declarations: [CreateItemPage]\n})\nexport class CreateItemPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NyZWF0ZS1pdGVtL2NyZWF0ZS1pdGVtLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { NavController, ModalController } from '@ionic/angular';\nimport { ApiRestService } from '../api-rest.service';\nimport { FormGroup, FormControl, FormBuilder, Validators } from \"@angular/forms\";\n\nimport { CreateSeriesPage } from '../create-series/create-series.page';\n\n@Component({\n  selector: 'app-create-item',\n  templateUrl: './create-item.page.html',\n  styleUrls: ['./create-item.page.scss'],\n})\nexport class CreateItemPage implements OnInit {\n\n  type: any;\n  typeName: any;\n  series: any[];\n  genres: any[];\n  newitem: FormGroup;\n  ItemID: any;\n\tItemType;\n\tCreatorUserID: any;\n\tItemName: any;\n  SeriesID: any;\n  NewSeries: any = null;\n  isSubmitted = false;\n\n  constructor(public http: ApiRestService, private navCtrl: NavController, public modalController: ModalController,\n    private route: ActivatedRoute, private router: Router, private formBuilder: FormBuilder) {\n      this.type = this.route.snapshot.params.type;\n      this.typeName = this.http.getItemTypeName(this.type);\n      this.getSeriesList();\n      this.getGenreList();\n      this.newitem = new FormGroup({\n        ItemName: new FormControl(),\n        SeriesID: new FormControl(),\n        GenreID1: new FormControl(),\n        GenreID2: new FormControl(),\n        GenreID3: new FormControl()\n     });\n     this.SeriesID = null;\n     this.ItemType = this.http.getItemType(this.type);\n     }\n\n     getSeriesList() {\n      this.http.getSeriesList().subscribe(\n        (res) => { \n          this.series = res['body'];\n          this.series = this.series.filter(o => o['CreatorUserID']>0);\n          console.log(\"Series:\",this.series);\n        },\n        (error) =>{\n          console.error(error);\n        }\n      )\n    }\n\n    getGenreList() {\n      console.log(\"busco gÃ©neros de \",this.type);\n      this.http.getGenreList(this.type).subscribe(\n        (res) => { \n          this.genres = res['body'];\n          console.log(\"GÃ©neros \",this.genres);\n        },\n        (error) =>{\n          console.error(error);\n        }\n      )\n    }\n\n  ngOnInit() {\n    this.newitem = this.formBuilder.group({\n      'ItemName' : [null, Validators.required],\n      'SeriesID' : [null],\n      'GenreID1' : [null],\n      'GenreID2' : [null],\n      'GenreID3' : [null]\n    });\n  }\n\n  async goToNewSeries() {\n    console.log(\"PÃ¡gina modal\");\n    const modal = await this.modalController.create({\n      component: CreateSeriesPage,\n      componentProps: {\n        \"paramID\": 123,\n        \"paramTitle\": \"Test Title\"\n      }\n    });\n\n    modal.onDidDismiss().then((dataReturned) => {\n      if (dataReturned != null) {\n        this.series = [];\n        this.NewSeries = dataReturned;\n        console.log(\"New Series: \",this.NewSeries);\n        this.getSeriesList();\n      }\n    });\n\n    return await modal.present();\n  }\n\n  submitForm() {\n    this.isSubmitted = true;\n    if (!this.newitem.valid) {\n      console.log('Please provide all the required values!')\n      return false;\n    } else {\n      this.newitem.value['ItemType'] = this.ItemType;\n      console.log(this.newitem.value);\n      this.ItemID = this.http.createItem(this.newitem.value);\n      console.log(this.ItemID);\n    }\n  }\n\n  get errorControl() {\n    return this.newitem.controls;\n  }\n\n  compareFn(e1: any, e2: any): boolean {\n    return e1 && e2 ? e1.id === e2.id : e1 === e2;\n  }\n\n}\n"]}